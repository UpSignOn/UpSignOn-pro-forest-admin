// This model was generated by Lumber. However, you remain in control of your models.

const { upsignonError } = require("../helpers/preventCRUD");

// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Settings = sequelize.define(
    "settings",
    {
      key: {
        type: DataTypes.STRING,
        primaryKey: true,
      },
      value: {
        type: DataTypes.BOOLEAN,
      },
    },
    {
      tableName: "settings",
      timestamps: false,
      schema: process.env.DATABASE_SCHEMA,
    }
  );
  Settings.removeAttribute("id");
  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Settings.associate = (models) => {};

  const authorizeOnlyValueEdition = (instance) => {
    const authorizedFields = ["value"];
    const changedFields = Object.keys(instance._changed);
    changedFields.forEach((f) => {
      if (!authorizedFields.includes(f)) throw new Error("Only value can be edited.");
    });
  };
  Settings.beforeBulkCreate(upsignonError);
  Settings.beforeBulkDestroy(upsignonError);
  Settings.beforeBulkUpdate(upsignonError);
  Settings.beforeCreate(upsignonError);
  Settings.beforeDestroy(upsignonError);
  Settings.beforeUpdate(authorizeOnlyValueEdition);
  Settings.beforeSave(authorizeOnlyValueEdition);
  Settings.beforeUpsert(upsignonError);
  return Settings;
};
